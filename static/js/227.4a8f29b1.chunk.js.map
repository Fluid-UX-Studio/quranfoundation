{"version":3,"file":"static/js/227.4a8f29b1.chunk.js","mappings":"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","sources":["Views/Postlogin/Customers/AddNewCustomer/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Button from \"@mui/material/Button\";\nimport { ValidationEngine } from \"Utils/helperFunctions\";\n\nconst validationSchema = {\n  customerName: [\n    {\n      message: \"Please enter customer name\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  companyName: [\n    {\n      message: \"Please enter company name\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  companyAbbreviation: [\n    {\n      message: \"Please enter company cbbreviation\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  phone: [\n    {\n      message: \"Please enter phone number\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n    {\n      message: \"Please enter valid phone number\",\n      type: ValidationEngine.type.REGEX,\n      regex: ValidationEngine.MOBILE_NUMBER_REGEX,\n    },\n  ],\n  email: [\n    {\n      message: \"Please enter email\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n    {\n      message: \"Please enter valid email\",\n      type: ValidationEngine.type.REGEX,\n      regex: ValidationEngine.EMAIL_REGEX,\n    },\n  ],\n  address: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  city: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  postalCode: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  country: [\n    {\n      message: \"Please enter contact person\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n};\n\nclass AddNewCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customerName: \"\",\n      companyName: \"\",\n      companyAbbreviation: \"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      city: \"\",\n      postalCode: \"\",\n      country: \"\",\n      isSubmitted: false,\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    const val = type === \"checkbox\" ? checked : value;\n    this.setState({ [name]: val });\n  };\n\n  validateForm = () => {\n    const {\n      customerName,\n      companyName,\n      companyAbbreviation,\n      phone,\n      email,\n      address,\n      city,\n      postalCode,\n      country,\n    } = this.state;\n    const error = ValidationEngine.validate(validationSchema, {\n      customerName,\n      companyName,\n      companyAbbreviation,\n      phone,\n      email,\n      address,\n      city,\n      postalCode,\n      country,\n    });\n    return error;\n  };\n\n  handleSubmit = () => {\n    const errorData = this.validateForm();\n    this.setState({\n      isSubmitted: true,\n    });\n    if (errorData.isValid) {\n    }\n  };\n\n  render() {\n    const errorData = this.validateForm();\n    const {\n      customerName,\n      companyName,\n      companyAbbreviation,\n      phone,\n      email,\n      address,\n      city,\n      postalCode,\n      country,\n      isSubmitted,\n    } = this.state;\n\n    return (\n      <div className=\"main-container\">\n        <div className=\"add-new-container\">\n          <div className=\"heading\">\n            <h2>Add New Customer</h2>\n          </div>\n          <div className=\"add-new-form-container\">\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Customer Name</label>\n                  <TextField\n                    name=\"customerName\"\n                    value={customerName}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.customerName.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.customerName.message : \"\"}\n                    defaultValue={customerName}\n                    placeholder=\"Brain MD\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Company Name</label>\n                  <TextField\n                    name=\"companyName\"\n                    value={companyName}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.companyName.isValid && isSubmitted}\n                    helperText={\n                      isSubmitted ? errorData.companyName.message : \"\"\n                    }\n                    defaultValue={companyName}\n                    placeholder=\"Brain MD\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Company Abbreviation</label>\n                  <TextField\n                    name=\"companyAbbreviation\"\n                    value={companyAbbreviation}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.companyAbbreviation.isValid && isSubmitted}\n                    helperText={\n                      isSubmitted ? errorData.companyAbbreviation.message : \"\"\n                    }\n                    defaultValue={companyAbbreviation}\n                    placeholder=\"ABC-123456-12\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Phone</label>\n                  <TextField\n                    type=\"number\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.phone.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.phone.message : \"\"}\n                    defaultValue={phone}\n                    placeholder=\"+1 (123)-456-789\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Email</label>\n                  <TextField\n                    name=\"email\"\n                    value={email}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.email.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.email.message : \"\"}\n                    defaultValue={email}\n                    placeholder=\"info@brainmd.com\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Address</label>\n                  <TextField\n                    name=\"address\"\n                    value={address}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.address.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.address.message : \"\"}\n                    defaultValue={address}\n                    placeholder=\"1234 Stm El\"\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter City</label>\n                  <TextField\n                    select\n                    name=\"city\"\n                    value={city}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.city.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.city.message : \"\"}\n                    defaultValue={city}\n                    placeholder=\"Select City\"\n                  >\n                    <MenuItem value=\"City1\">City1</MenuItem>\n                    <MenuItem value=\"City2\">City2</MenuItem>\n                    <MenuItem value=\"City3\">City3</MenuItem>\n                  </TextField>\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Postal Code</label>\n                  <TextField\n                    select\n                    name=\"postalCode\"\n                    value={postalCode}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.postalCode.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.postalCode.message : \"\"}\n                    defaultValue={postalCode}\n                    placeholder=\"Select State\"\n                  >\n                    <MenuItem value=\"Postal1\">Postal1</MenuItem>\n                    <MenuItem value=\"Postal2\">Postal2</MenuItem>\n                    <MenuItem value=\"Postal3\">Postal3</MenuItem>\n                  </TextField>\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box className=\"form-text-field\">\n                  <label>Enter Country</label>\n                  <TextField\n                    select\n                    name=\"country\"\n                    value={country}\n                    onChange={this.handleChange}\n                    className=\"text-field\"\n                    error={!errorData.country.isValid && isSubmitted}\n                    helperText={isSubmitted ? errorData.country.message : \"\"}\n                    defaultValue={country}\n                    placeholder=\"Select Country\"\n                  >\n                    <MenuItem value=\"Country1\">Country1</MenuItem>\n                    <MenuItem value=\"Country2\">Country2</MenuItem>\n                    <MenuItem value=\"Country3\">Country3</MenuItem>\n                  </TextField>\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <div className=\"add-new-form-btn\">\n                  <Button className=\"btn-outline-secondary\" variant=\"outlined\">\n                    Cancel\n                  </Button>\n                  <Button\n                    className=\"primary-btn\"\n                    variant=\"contained\"\n                    onClick={this.handleSubmit}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddNewCustomer;\n"],"names":["validationSchema","customerName","message","type","ValidationEngine","MANDATORY","companyName","companyAbbreviation","phone","REGEX","regex","MOBILE_NUMBER_REGEX","email","EMAIL_REGEX","address","city","postalCode","country","AddNewCustomer","Component","constructor","props","super","handleChange","event","name","value","checked","target","val","this","setState","validateForm","state","validate","handleSubmit","errorData","isSubmitted","isValid","render","_jsx","className","children","_jsxs","Grid","container","spacing","item","xs","Box","TextField","onChange","error","helperText","defaultValue","placeholder","select","MenuItem","Button","variant","onClick"],"sourceRoot":""}