{"version":3,"file":"static/js/340.9420ee49.chunk.js","mappings":"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","sources":["Views/PreLogin/Signin.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Container,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Checkbox,\n  Link,\n} from \"@mui/material\";\nimport { withStyles } from \"@mui/styles\";\nimport GoogleIcon from \"@mui/icons-material/Google\";\nimport { ValidationEngine, ErrorMessages } from \"Utils/helperFunctions\"; // Import your validation engine and error messages\n\nconst styles = (theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    backgroundImage: \"url(/path-to-your-background-image.png)\", // Ensure your image is in the public folder or use the correct path\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  box: {\n    backgroundColor: \"#fff\",\n    padding: \"40px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    textAlign: \"center\",\n  },\n  input: {\n    margin: \"10px 0\",\n  },\n  button: {\n    margin: \"20px 0\",\n  },\n  googleButton: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"10px 0\",\n    textTransform: \"none\",\n  },\n});\nconst validationSchema = {\n  email: [\n    {\n      message: \"Please enter Email\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n    {\n      message: \"Please valid Email\",\n      type: ValidationEngine.type.REGEX,\n      regex: ValidationEngine.EMAIL_REGEX,\n    },\n  ],\n  password: [\n    {\n      message: \"Please enter Password\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n};\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      rememberMe: false,\n      isSumitted: false,\n      errors: {}, // State to hold validation errors\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    const val = type === \"checkbox\" ? checked : value;\n    this.setState({ [name]: val });\n  };\n\n  validateForm = () => {\n    const { email, password } = this.state;\n    const error = ValidationEngine.validate(validationSchema, {\n      email,\n      password,\n    });\n    return error;\n  };\n\n  handleSignIn = () => {\n    const errorData = this.validateForm();\n    this.setState({\n      isSumitted: true,\n    });\n    if (errorData.isValid) {\n    }\n  };\n\n  render() {\n    const errorData = this.validateForm();\n    const { classes } = this.props;\n    const { email, password, rememberMe, isSumitted } = this.state;\n    return (\n      <Container className={classes.container}>\n        <Box className={classes.box}>\n          <Typography variant=\"h5\" gutterBottom>\n            Sign in to Rasi Lab\n          </Typography>\n          <TextField\n            className={classes.input}\n            label=\"Email\"\n            variant=\"outlined\"\n            fullWidth\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            error={!errorData.email.isValid && isSumitted}\n            helperText={isSumitted ? errorData.email.message : \"\"}\n          />\n          <TextField\n            className={classes.input}\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            fullWidth\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            error={!errorData.password.isValid && isSumitted}\n            helperText={isSumitted ? errorData.password.message : \"\"}\n          />\n\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Box display=\"flex\" alignItems=\"center\">\n              <Checkbox\n                checked={rememberMe}\n                onChange={(event) =>\n                  this.setState({ rememberMe: event.target.checked })\n                }\n              />\n              <Typography variant=\"body2\">Remember me</Typography>\n            </Box>\n            <Link href=\"#\" variant=\"body2\">\n              Forgot password?\n            </Link>\n          </Box>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={this.handleSignIn}\n          >\n            Sign In\n          </Button>\n          <Typography variant=\"body2\" gutterBottom>\n            Or\n          </Typography>\n          <Button\n            className={`${classes.button} ${classes.googleButton}`}\n            variant=\"outlined\"\n            fullWidth\n            startIcon={<GoogleIcon />}\n          >\n            Sign up with Google\n          </Button>\n          <Typography variant=\"body2\">\n            Don't have an account? <Link href=\"#\">Sign up Now</Link>\n          </Typography>\n        </Box>\n      </Container>\n    );\n  }\n}\n\nexport default withStyles(styles)(Signin);\n"],"names":["validationSchema","email","message","type","ValidationEngine","MANDATORY","REGEX","regex","EMAIL_REGEX","password","Signin","Component","constructor","props","super","handleChange","event","name","value","checked","target","val","this","setState","validateForm","state","validate","handleSignIn","errorData","isSumitted","isValid","rememberMe","errors","render","classes","_jsx","Container","className","container","children","_jsxs","Box","box","Typography","variant","gutterBottom","TextField","input","label","fullWidth","onChange","error","helperText","display","justifyContent","alignItems","Checkbox","Link","href","Button","button","color","onClick","concat","googleButton","startIcon","GoogleIcon","withStyles","theme","flexDirection","height","backgroundImage","backgroundSize","backgroundPosition","backgroundColor","padding","borderRadius","boxShadow","textAlign","margin","textTransform"],"sourceRoot":""}