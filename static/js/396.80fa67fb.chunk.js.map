{"version":3,"file":"static/js/396.80fa67fb.chunk.js","mappings":"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","sources":["Views/Postlogin/Inventory/RawMaterials/AddProduct/index.js","../node_modules/@mui/icons-material/DeleteOutlined.js","../node_modules/@mui/icons-material/FileUploadOutlined.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport { ValidationEngine } from \"Utils/helperFunctions\";\nimport UploadImg from \"../../../../../assets/img/upload-img.png\";\n\nconst validationSchema = {\n  ingredientName: [\n    {\n      message: \"Please enter ingredient name\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  purchasedDate: [\n    {\n      message: \"Please enter purchased date\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  expiryDate: [\n    {\n      message: \"Please enter expiry date\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  unitPrice: [\n    {\n      message: \"Please enter unit price\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  unitMeasure: [\n    {\n      message: \"Please enter unit measure\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  purchaseQuantity: [\n    {\n      message: \"Please enter purchase quantity\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  thresholdValue: [\n    {\n      message: \"Please enter threshold value\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n  totalCost: [\n    {\n      message: \"Please enter total cost\",\n      type: ValidationEngine.type.MANDATORY,\n    },\n  ],\n};\n\nclass AddProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredientName: \"\",\n      purchasedDate: \"\",\n      expiryDate: \"\",\n      unitPrice: \"\",\n      unitMeasure: \"\",\n      purchaseQuantity: \"\",\n      thresholdValue: \"\",\n      totalCost: \"\",\n      isSubmitted: false,\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    const val = type === \"checkbox\" ? checked : value;\n    this.setState({ [name]: val });\n  };\n\n  validateForm = () => {\n    const {\n      ingredientName,\n      purchasedDate,\n      expiryDate,\n      unitPrice,\n      unitMeasure,\n      purchaseQuantity,\n      thresholdValue,\n      totalCost,\n    } = this.state;\n    const error = ValidationEngine.validate(validationSchema, {\n      ingredientName,\n      purchasedDate,\n      expiryDate,\n      unitPrice,\n      unitMeasure,\n      purchaseQuantity,\n      thresholdValue,\n      totalCost,\n    });\n    return error;\n  };\n\n  handleSubmit = () => {\n    const errorData = this.validateForm();\n    this.setState({\n      isSubmitted: true,\n    });\n    if (errorData.isValid) {\n    }\n  };\n\n  render() {\n    const errorData = this.validateForm();\n    const {\n      ingredientName,\n      purchasedDate,\n      expiryDate,\n      unitPrice,\n      unitMeasure,\n      purchaseQuantity,\n      thresholdValue,\n      totalCost,\n      isSubmitted,\n    } = this.state;\n\n    return (\n      <div className=\"main-container\">\n        <div className=\"add-new-container\">\n          <Grid container spacing={2}>\n            <Grid item xs={9}>\n              <div className=\"heading\">\n                <h2 className=\"d-flex\">Add Product</h2>\n                <span>Please add the details of the product</span>\n              </div>\n              <div className=\"add-new-form-container add-new-product\">\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <Box className=\"form-text-field\">\n                      <label>Ingredient Name</label>\n                      <TextField\n                        name=\"ingredientName\"\n                        value={ingredientName}\n                        onChange={this.handleChange}\n                        className=\"text-field\"\n                        error={!errorData.ingredientName.isValid && isSubmitted}\n                        helperText={\n                          isSubmitted ? errorData.ingredientName.message : \"\"\n                        }\n                        defaultValue={ingredientName}\n                        placeholder=\"Vitamin E\"\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box className=\"form-text-field\">\n                      <label>Purchased Date</label>\n                      <TextField\n                        type=\"date\"\n                        name=\"purchasedDate\"\n                        value={purchasedDate}\n                        onChange={this.handleChange}\n                        className=\"text-field\"\n                        error={!errorData.purchasedDate.isValid && isSubmitted}\n                        helperText={\n                          isSubmitted ? errorData.purchasedDate.message : \"\"\n                        }\n                        defaultValue={purchasedDate}\n                        inputProps={{\n                          placeholder: \"12-02-2024\",\n                        }}\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box className=\"form-text-field\">\n                      <label>Expiry Date</label>\n                      <TextField\n                        type=\"date\"\n                        name=\"expiryDate\"\n                        value={expiryDate}\n                        onChange={this.handleChange}\n                        className=\"text-field\"\n                        error={!errorData.expiryDate.isValid && isSubmitted}\n                        helperText={\n                          isSubmitted ? errorData.expiryDate.message : \"\"\n                        }\n                        defaultValue={expiryDate}\n                        placeholder=\"12-05-2028\"\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box className=\"form-text-field\">\n                      <label>Unit Price</label>\n                      <TextField\n                        name=\"unitPrice\"\n                        value={unitPrice}\n                        onChange={this.handleChange}\n                        className=\"text-field\"\n                        error={!errorData.unitPrice.isValid && isSubmitted}\n                        helperText={\n                          isSubmitted ? errorData.unitPrice.message : \"\"\n                        }\n                        defaultValue={unitPrice}\n                        placeholder=\"$1250.04\"\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box className=\"form-text-field\">\n                      <label>Unit of Measure</label>\n                      <TextField\n                        name=\"unitMeasure\"\n                        value={unitMeasure}\n                        onChange={this.handleChange}\n                        className=\"text-field\"\n                        error={!errorData.unitMeasure.isValid && isSubmitted}\n                        helperText={\n                          isSubmitted ? errorData.unitMeasure.message : \"\"\n                        }\n                        defaultValue={unitMeasure}\n                        placeholder=\"Kg / Grms\"\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box className=\"form-text-field\">\n                      <label>Purchase Quantity</label>\n                      <TextField\n                        name=\"purchaseQuantity\"\n                        value={purchaseQuantity}\n                        onChange={this.handleChange}\n                        className=\"text-field\"\n                        error={\n                          !errorData.purchaseQuantity.isValid && isSubmitted\n                        }\n                        helperText={\n                          isSubmitted ? errorData.purchaseQuantity.message : \"\"\n                        }\n                        defaultValue={purchaseQuantity}\n                        placeholder=\"200 Kg\"\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box className=\"form-text-field\">\n                      <label>Threshold Value</label>\n                      <TextField\n                        name=\"thresholdValue\"\n                        value={thresholdValue}\n                        onChange={this.handleChange}\n                        className=\"text-field\"\n                        error={!errorData.thresholdValue.isValid && isSubmitted}\n                        helperText={\n                          isSubmitted ? errorData.thresholdValue.message : \"\"\n                        }\n                        defaultValue={thresholdValue}\n                        placeholder=\"Kg / Grms / Ltrs\"\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box className=\"form-text-field\">\n                      <label>Total Cost</label>\n                      <TextField\n                        name=\"totalCost\"\n                        value={totalCost}\n                        onChange={this.handleChange}\n                        className=\"text-field\"\n                        error={!errorData.totalCost.isValid && isSubmitted}\n                        helperText={\n                          isSubmitted ? errorData.totalCost.message : \"\"\n                        }\n                        defaultValue={totalCost}\n                        placeholder=\"$100,120.05\"\n                      />\n                    </Box>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <div className=\"add-new-form-btn\">\n                      <Button\n                        className=\"btn-outline-secondary\"\n                        variant=\"outlined\"\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        className=\"primary-btn\"\n                        variant=\"contained\"\n                        onClick={this.handleSubmit}\n                      >\n                        Save Details\n                      </Button>\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n            <Grid item xs={3}>\n              <Box className=\"upload-image\">\n                <div className=\"image\">\n                  <img src={UploadImg} alt=\"\" />\n                </div>\n                <Box className=\"upload-btns\">\n                  <Button\n                    variant=\"outlined\"\n                    startIcon={<FileUploadOutlinedIcon />}\n                  >\n                    Upload\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"error\"\n                    startIcon={<DeleteOutlinedIcon />}\n                  >\n                    Remove\n                  </Button>\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProduct;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 9v10H8V9zm-1.5-6h-5l-1 1H5v2h14V4h-3.5zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2z\"\n}), 'DeleteOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3zM7 9l1.41 1.41L11 7.83V16h2V7.83l2.59 2.58L17 9l-5-5z\"\n}), 'FileUploadOutlined');"],"names":["validationSchema","ingredientName","message","type","ValidationEngine","MANDATORY","purchasedDate","expiryDate","unitPrice","unitMeasure","purchaseQuantity","thresholdValue","totalCost","AddProduct","Component","constructor","props","super","handleChange","event","name","value","checked","target","val","this","setState","validateForm","state","validate","handleSubmit","errorData","isSubmitted","isValid","render","_jsx","className","children","_jsxs","Grid","container","spacing","item","xs","Box","TextField","onChange","error","helperText","defaultValue","placeholder","inputProps","Button","variant","onClick","src","UploadImg","alt","startIcon","FileUploadOutlinedIcon","color","DeleteOutlinedIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}